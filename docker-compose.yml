version: "3.9"
name: "fc-backend"
services:
  web:
    environment:
      - SERVICE_TYPE=web
    container_name: 'web'
    build: .
    ports:
      - "8000:8000"
    networks:
      - rabbitmq_go_net

  db:
    env_file:
      - .docker.env
    ports:
      - "5432:5432"
    image: postgres:14
    container_name: 'db'
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U $$DB_USER -d $$DB_NAME -h db -p 5432" ]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    networks:
      - rabbitmq_go_net

  rabbitmq:
    build:
      context: .
      dockerfile: Dockerfile.rabbitmq
    container_name: 'rabbitmq'
    healthcheck:
      test: [ "CMD-SHELL", "rabbitmq-diagnostics -q ping" ]
      interval: 30s
      timeout: 30s
      retries: 3
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - ~/.docker-conf/rabbitmq/data/:/var/lib/rabbitmq/
      - ~/.docker-conf/rabbitmq/log/:/var/log/rabbitmq
    networks:
      - rabbitmq_go_net

  celery-worker:
    environment:
      - SERVICE_TYPE=celery-worker
    build: .
    container_name: 'celery-worker'
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
      - rabbitmq_go_net

  celery-beat:
    environment:
      - SERVICE_TYPE=celery-beat
    build: .
    container_name: 'celery-beat'
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
      - rabbitmq_go_net

networks:
  rabbitmq_go_net:
    driver: bridge


volumes:
  postgres_data:
